## Binary Search

# - Arguments
# 1. The array/list
# 2. Low pointer
# 3. High pointer
# 4. The number you are looking
# --------
# - The code
# 1. Check if the exit condition is true
#   - if the low pointer and high pointer have crossed each other
#   - if the mid value is found
# 2. if the value is greater than the middle value,
#    - make the low pointer to be one higher the the middle value
# 3. if the value is lower than the middle value, move the high pointer one lower than the mid
def bina(arr, low, high, x):
    if high >= low:
        mid = (high + low) // 2
        
        if arr[mid] == x:
            return mid
        
        if x > arr[mid]:
            return bina(arr, mid+1, high, x)
        
        if x < arr[mid]:
            return bina(arr, low, mid-1, x)
        
    else:
        return -1
    
arr = [1,2,3,4,5,6,7]
x = 8
print(bina(arr, 0, len(arr)-1, x))
