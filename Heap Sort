# Heap Sort
# - Arguments
# 1. The array/list
# --------
# - The code
# 1. Build a max heap from the array
# 2. Swap the root (max) with the last item
# 3. Reduce the heap size and heapify again
# 4. Repeat until the array is sorted

def heapify(arr, n, i):
    largest = i       # Initialize largest as root
    l = 2 * i + 1      # left child index
    r = 2 * i + 2      # right child index

    if l < n and arr[l] > arr[largest]:
        largest = l
    if r < n and arr[r] > arr[largest]:
        largest = r

    if largest != i:
        arr[i], arr[largest] = arr[largest], arr[i]
        heapify(arr, n, largest)

def heap_sort(arr):
    n = len(arr)
    # Build max heap
    for i in range(n // 2 - 1, -1, -1):
        heapify(arr, n, i)

    # Extract elements
    for i in range(n - 1, 0, -1):
        arr[i], arr[0] = arr[0], arr[i]
        heapify(arr, i, 0)
    return arr

arr = [12, 11, 13, 5, 6, 7]
print(heap_sort(arr))
# â†’ [5, 6, 7, 11, 12, 13]
