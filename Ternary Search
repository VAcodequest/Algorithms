# Ternary Search
# - Arguments
# 1. The array/list (must be sorted)
# 2. Left pointer (start index)
# 3. Right pointer (end index)
# 4. The number you are looking for
# --------
# - The code
# 1. Calculate mid1 and mid2 (two split points)
# 2. If the element at mid1 or mid2 equals x, return its index
# 3. Recursively search the left, middle, or right segment
# 4. If we exit recursion without finding x, return -1
def ternary(arr, left, right, x):
    if right >= left:
        mid1 = left + (right - left) // 3
        mid2 = right - (right - left) // 3

        if arr[mid1] == x:
            return mid1
        if arr[mid2] == x:
            return mid2

        if x < arr[mid1]:
            return ternary(arr, left, mid1 - 1, x)
        elif x > arr[mid2]:
            return ternary(arr, mid2 + 1, right, x)
        else:
            return ternary(arr, mid1 + 1, mid2 - 1, x)
    return -1

arr = [1, 3, 5, 7, 9, 11, 13]
x = 9
print(ternary(arr, 0, len(arr) - 1, x))
# â†’ 4  (since arr[4] == 9)
