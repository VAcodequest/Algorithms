# Quick Sort
# - Arguments:
#   1. arr — list of elements
#   2. low — starting index
#   3. high — ending index
# --------
# - The Code:
#   1. Choose a pivot element (last element)
#   2. Partition elements into two halves based on the pivot
#   3. Recursively sort the two halves

def partition(arr, low, high):
    pivot = arr[high]         # Choosing the last element as pivot
    i = low - 1               # Index of smaller element
    for j in range(low, high):
        if arr[j] <= pivot:   # If current element is smaller than or equal to pivot
            i += 1
            arr[i], arr[j] = arr[j], arr[i]  # Swap
    arr[i + 1], arr[high] = arr[high], arr[i + 1]  # Place pivot at correct position
    return i + 1

def quick_sort(arr, low, high):
    if low < high:
        pi = partition(arr, low, high)       # Partition index
        quick_sort(arr, low, pi - 1)         # Recursively sort left part
        quick_sort(arr, pi + 1, high)        # Recursively sort right part

arr = [10, 7, 8, 9, 1, 5]
quick_sort(arr, 0, len(arr) - 1)
print("Sorted array:", arr)
